package testDBConnection;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;

public class MainDBTest {

    public static void main(String[] args) {
        final String DATABASE_URL =
                "jdbc:sqlserver://localhost;" +
                        "databaseName=SockStore;integratedSecurity=true;encrypt=true;TrustServerCertificate=true";
        Connection dbConnection = null;
        try {
            // Establish connection
            dbConnection = DriverManager.getConnection(DATABASE_URL);
            dbConnection.setAutoCommit(false);
            System.out.println("Connected successfully");

            // Create a statement
            Statement statement = dbConnection.createStatement();
            
          

            // Create Table1 (SockTypes)
            statement.executeUpdate("CREATE TABLE SockTypes (" +
                                    "SockTypeID INT PRIMARY KEY, " +
                                    "Name VARCHAR(50), " +
                                    "Material VARCHAR(50), " +
                                    "Color VARCHAR(50), " +
                                    "Size VARCHAR(10), " +
                                    "Price DECIMAL(10, 2), " +
                                    "Description VARCHAR(255))");
            System.out.println("SockTypes table created");

            // Create Table2 (Orders)
            statement.executeUpdate("CREATE TABLE Orders (" +
                                    "OrderID INT PRIMARY KEY, " +
                                    "SockTypeID INT, " +
                                    "CustomerName VARCHAR(50), " +
                                    "Quantity INT, " +
                                    "OrderDate DATE, " +
                                    "FOREIGN KEY (SockTypeID) REFERENCES SockTypes(SockTypeID))");
            System.out.println("Orders table created with foreign key");

            // Commit transaction
            dbConnection.commit();
            System.out.println("Transaction committed");

        } catch (SQLException sqlE) {
            System.out.println("Encountered a problem: " + sqlE.getMessage());
            // Rollback transaction in case of failure
            try {
                if (dbConnection != null) {
                    dbConnection.rollback();
                    System.out.println("Transaction rolled back");
                }
            } catch (SQLException e) {
                System.out.println("Failed to rollback transaction: " + e.getMessage());
            }
        } finally {
            // Close connection
            try {
                if (dbConnection != null) {
                    dbConnection.close();
                    System.out.println("Connection closed");
                }
            } catch (SQLException e) {
                System.out.println("Failed to close connection: " + e.getMessage());
            }
        }
    }
}
